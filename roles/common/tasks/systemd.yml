
- name: Replace REDIS_ENDPOINT
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'REDIS_ENDPOINT'
    replace: 'redis.roboshop.internal'


- name: Replace MONGO_ENDPOINT/mongodb.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'MONGO_ENDPOINT'
    replace: 'mongodb.roboshop.internal'


- name: Replace CATALOGUE_ENDPOINT/catalogue.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'CATALOGUE_ENDPOINT'
    replace: 'catalogue.roboshop.internal'


- name: Replace MONGO_DNSNAME/mongodb.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'MONGO_DNSNAME'
    replace: 'mongodb.roboshop.internal'



- name: Replace CARTENDPOINT/cart.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'CARTENDPOINT'
    replace: 'cart.roboshop.internal'

- name: Replace DBHOST/mysql.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'DBHOST'
    replace: 'mysql.roboshop.internal'

- name: Replace CARTHOST/cart.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'CARTHOST'
    replace: 'cart.roboshop.internal'

- name: Replace USERHOST/user.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'USERHOST'
    replace: 'user.roboshop.internal'

- name: Replace USERHOST/user.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'USERHOST'
    replace: 'user.roboshop.internal'

    
- name: Replace AMQPHOST/rabbitmq.roboshop.internal
  ansible.builtin.replace:
    path: /home/roboshop/{{COMPONENT}}/systemd.service
    regexp: 'AMQPHOST'
    replace: 'rabbitmq.roboshop.internal'


- name: Copy files
  ansible.builtin.copy:
    src: /home/roboshop/{{COMPONENT}}/systemd.service
    dest: /etc/systemd/system/{{COMPONENT}}.service
    remote_src: yes


- name: Enable and start the service
  ansible.builtin.systemd:
    name: "{{COMPONENT}}"
    state: restarted
    enabled: true    
    daemon_reload: yes    

# SYSTEMD_SETUP() {

#     echo " Updating the systemD service file with DNS name"
#     sed -i -e 's/REDIS_ENDPOINT/redis.roboshop.internal/' -e 's/MONGO_ENDPOINT/mongodb.roboshop.internal/' -e 's/CATALOGUE_ENDPOINT/catalogue.roboshop.internal/' -e 's/MONGO_DNSNAME/mongodb.roboshop.internal/' -e 's/CARTENDPOINT/cart.roboshop.internal/' -e 's/DBHOST/mysql.roboshop.internal/' -e 's/CARTHOST/cart.roboshop.internal/' -e 's/USERHOST/user.roboshop.internal/' -e  's/AMQPHOST/rabbitmq.roboshop.internal/' /home/roboshop/${COMPONENT}/systemd.service &>>${LOG_FILE}
#     Statuscheck $?

#     echo "Setting the service tr=o run "
#     mv /home/roboshop/${COMPONENT}/systemd.service /etc/systemd/system/${COMPONENT}.service &>>${LOG_FILE}
#     Statuscheck $?

#     echo "reloading the config from disk "
#     systemctl daemon-reload

#     echo "reloadstarting the service "
#     systemctl start ${COMPONENT} &>>${LOG_FILE}
#     Statuscheck $?
    
#     echo "enable the service "
#     systemctl enable ${COMPONENT} &>>${LOG_FILE}     
#     Statuscheck $?

# }