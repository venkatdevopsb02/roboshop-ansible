- name: Download mongodb repo file and place it a directory
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/roboshop-devops-project/mongodb/main/mongo.repo
    dest: /etc/yum.repos.d/mongodb.repo


- name: Install the  MongoDB package
  ansible.builtin.yum:
    name: mongodb-org
    state: present

- name: Enable and start the service
  ansible.builtin.systemd:
    name: mongod
    state: started
    enabled: true    
    daemon_reload: yes    


- name: Replace loop back address 127.0.0.1 with 0.0.0.0 on MongoDB config 
  ansible.builtin.replace:
    path: /etc/mongod.conf
    regexp: '127.0.0.1'
    replace: '0.0.0.0'


- name: Restart the MongoDB service
  ansible.builtin.systemd:
    name: mongod
    state: restarted


- name: Recursively remove file
  ansible.builtin.file:
    path: /tmp/mongodb
    state: absent
    force: true 

- name: Recursively remove file
  ansible.builtin.file:
    path: /tmp/mongodb.zip
    state: absent
    force: true 


- name: Recursively remove directory
  ansible.builtin.file:
    path: /tmp/mongodb-main
    state: absent    
    force: true

- name: Download mongodb database file and place it a directory
  ansible.builtin.get_url:
    url: https://github.com/roboshop-devops-project/mongodb/archive/main.zip
    dest: /tmp/mongodb.zip

# - name: Create a directory if it does not exist
#   ansible.builtin.file:
#     path: /tmp/mongodb-main
#     state: directory
#   ignore_errors: true     

- name: Unarchive a file that is already on the remote machine
  ansible.builtin.unarchive:
    src: /tmp/mongodb.zip
    dest: /tmp/
    remote_src: yes

- name: Run a js file containing MongoDB commands with pseudo-idempotency
  community.mongodb.mongodb_shell:
    file: 
      - "/tmp/mongodb-main/catalogue.js"
      - "/tmp/mongodb-main/user.js"
    remote_src: yes      

# cd mongodb-main
# mongo < catalogue.js &>>${LOG_FILE}
# Statuscheck $?
# mongo < users.js &>>${LOG_FILE}
# Statuscheck $?
